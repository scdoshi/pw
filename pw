#!/bin/bash

invalid() {
    echo "See: pw $cmd --help"
    exit 1
}

del_command() {
    # Help
    if [ "$1" = "--help" -o "$1" = "-h" ]; then
        echo "Delete an entry via id"
        echo "Options:"
        echo "-h / --help ... show this message"
        exit 0
    fi

    # Delete
    if [ -z "$1" ]; then
        invalid
    fi
    gkeyring --unlock $KEYRING
    gkeyring --delete --id $1 $KEYRING
    gkeyring --lock $KEYRING
}

find_command() {
    # Help
    if [ "$1" = "--help" -o "$1" = "-h" ]; then
        echo "Grep for search term in id, key, username fields"
        echo "Options:"
        echo "-h / --help ... show this message"
        echo "-s / --show ... show password"
        exit 0
    fi

    # Validate arguments and options
    show=""
    query=""

    for arg in "$@"; do
        if [ ${arg:0:1} = "-" ]; then
            if [ "$arg" = "-s" -o "$arg" = "--show" ]; then
                show=1
            else
                echo "Invalid option: $arg"
                invalid
            fi
        elif [ -z "$query" ]; then
            query="$arg"
        else
            echo "Invalid argument: $arg."
            invalid
        fi
    done

    if [ -z "$query" ]; then
        echo "Invalid arguments."
        invalid
    fi

    # Find
    gkeyring --unlock $KEYRING
    if [ -z "$show" ]; then
        gkeyring --all -o id,name,username $KEYRING | grep -i $query
        echo "$(gkeyring --all -o id,name,username,secret $KEYRING | grep -i $query)" \
            | cut -f4 | xclip -selection clipboard
    else
        gkeyring --all -o id,name,username,secret $KEYRING | grep -i $query
    fi
    gkeyring --lock $KEYRING
}

set_command() {
    # Help
    if [ "$1" = "--help" -o "$1" = "-h" ]; then
        echo "Create new password entry"
        echo "Options:"
        echo "-h / --help     ... show this message"
        echo "-g / --generate ... auto generate new password"
        echo "-l / --length   ... length of auto generated password"
        exit 0
    fi

    # Validate arguments and options
    local generate=""
    local length=""
    local key=""
    local username=""

    for arg in "$@"; do
        if [ ${arg:0:1} = "-" ]; then
            if [ "$arg" = "-g" -o "$arg" = "--generate" ]; then
                generate=1
            elif [ "$arg" = "-l" -o "$arg" = "--length" ]; then
                length="set"
            else
                echo "Invalid option: $arg"
                invalid
            fi
        elif [ "$length" = "set" ]; then
            length=$arg
        elif [ -z "$key" ]; then
            key="$arg"
        elif [ -z "$username" ]; then
            username="$arg"
        else
            echo "Invalid argument: $arg."
            invalid
        fi
    done

    if [ -z "$key" -o -z "$username" ]; then
        echo "Invalid arguments."
        invalid
    fi

    # Set
    local password=""
    if [ -z "$generate" ]; then
        echo "Enter password:"
        read password
    else
        if [ -z "$length" ]; then
            length=32
        fi
        generate_password password $length
        echo "$password" | cut -d" " -f4 | xclip -selection clipboard
    fi
    gkeyring --unlock $KEYRING
    gkeyring --set --name $key -p username=$username -w $password $KEYRING
    gkeyring --lock $KEYRING
}

# $1: output, string, generated password
# $2: optional, number, required length of password
generate_password() {
    local __password=$1
    local length=$2
    if [ -z "$length" ]; then
        length=32
    fi
    eval $__password="`base64 < /dev/urandom | head -c $length`"
}

gen_command() {
    local password
    generate_password password $1
    echo "$password"
}

source ~/.pwrc

KEYRING=''
if test "$PW_KEYRING" != ''; then
    KEYRING="--keyring=$PW_KEYRING"
fi

cmd="$1"
if ! [ -z "$cmd" ]; then
    shift 1
fi

case "$cmd" in

    del)
        del_command $@
        ;;

    find)
        find_command $@
        ;;

    set)
        set_command $@
        ;;
    gen)
        gen_command $@
        ;;

    *)
        echo "Use as:"
        echo "pw find <search_term>"
        echo "pw find <search_term> --show"
        echo "pw set <key> <username>"
        echo "pw del <id>"
        echo ""
        echo "--help after any command to bring up help"
        exit 1
        ;;
esac
